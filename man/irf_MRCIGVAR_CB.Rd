% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MRCIGVAR_d.R
\name{irf_MRCIGVAR_CB}
\alias{irf_MRCIGVAR_CB}
\title{Regime specific impulse response functions of an MRCIGVAR(m,n,p,S) model}
\usage{
irf_MRCIGVAR_CB(
  res,
  nstep,
  comb,
  state = c(2, 1),
  irf = c("gen", "chol", "chol1", "gen1", "comb1"),
  runs = 200,
  conf = c(0.05, 0.95),
  NT = 1
)
}
\arguments{
\item{res}{a MRCIGVAR object that can be an output of MRCIGVARData, MRCIGVARest, or MRCIGVARest.}

\item{nstep}{the length of impulse response function}

\item{comb}{a vector specify the concerted action in policy-simulation impulse response function}

\item{state}{an n-vector specifying the specific state for each country.}

\item{irf}{types of the impulse response function c("gen","chol","chol1","gen1","comb1")}

\item{runs}{the number of bootstrapping runs}

\item{conf}{A vector specifying the confidence intervals}

\item{NT}{The number of impulse response scenarios}
}
\value{
an list of an (mn,mn,nstep,3,S) array of the impulse response functions and test statistics. In the impulse response array, columns representing the impulse and rows the responses.
}
\description{
This function calculates the regime specific impulse response functions of an estimated MRCIGVAR(n,p,S,r). Using G[,,,s] and Sigma[,,s] matrices of the estimated MRCIGVAR, this function can produce impulse response functions for any possible combinations of states.
}
\examples{
m = 2
n = 3
p = c(2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0); dim(p) = c(5,3,2)
p = p[1:n,,]; p[,1,] = 3; p[,2,] = 2

TH = c(1:n)*0; dim(TH) = c(1,n)
SESVI=rep(1,3,5)
r  = rep(1,n)

## case of n = 3, m = 2, S = 2    m: number of variables, n: number of countries


res_d <- MRCIGVARData(m=2,n=3,p=p,TH=TH,T=100,S=2, SESVI=c(1,3,5),r=rep(1,3),Ncommtrend=1)
max(abs(res_d$Y))
STAT(res_d$Go[,,,2])
STAT(res_d$Go[,,,1])
res_e  = MRCIGVARest(res=res_d)

res_e$Summary

IRF_CB = irf_MRCIGVAR_CB(res=res_e, nstep=10, comb=NA, state = c(2,1,1), irf = "gen1", runs = 20, conf = c(0.05, 0.95), NT = 1)

str(IRF_CB)

IRF_g = IRF_graph(IRF_CB[[1]])

}
